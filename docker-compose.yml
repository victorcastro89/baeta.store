version: "3.3"

services:

  wordpress:
    image: wodby/wordpress-php:7.2-dev-4.12.7
    container_name: "wordpress"
    environment:
  #      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $WORDPRESS_DB_HOST
      DB_USER: $WORDPRESS_DB_USER
      DB_PASSWORD: WORDPRESS_DB_PASSWORD
      DB_NAME: $WORDPRESS_DB_NAME
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      PHP_POST_MAX_SIZE: 300M
      PHP_MAX_EXECUTION_TIME: 500
      PHP_BLACKFIRE: 1
      BLACKFIRE_CLIENT_ID: 014bb9e0-7aee-4d0b-a882-9abd9144386f
      BLACKFIRE_CLIENT_TOKEN: 38226a435bc834c7215d87ddb744134eca20d24f3d38423459666ca6f9646bd1
      
  ## Read instructions at https://wodby.com/stacks/wordpress/docs/local/xdebug/
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
      PHP_IDE_CONFIG: serverName=my-ide
      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS
      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows
    volumes:
      - ${WORDPRESS_DATA_DIR}:/var/www/html

## For macOS users (https://wodby.com/stacks/wordpress/docs/local/docker-for-mac/)
#      - ./:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
## For XHProf and Xdebug profiler traces
#      - files:/mnt/files


  # wordpress:
  #   build: ./php
  #   container_name: wordpress
  #   restart: always
  #   volumes:
  #     - ${WORDPRESS_DATA_DIR}:/var/www/html:rw
  #     - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini  
  #     - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
  #   environment:
  #     - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME:-wordpress}
  #     - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX:-wp_}
  #     - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST:-mysql}
  #     - WORDPRESS_DB_USER=${WORDPRESS_DB_USER:-root}
  #     - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD:-password}
  #   labels:
  #     - traefik.enable=false
  #   depends_on:
  #     -  mariadb

  # wordpress1:
  #   build: ./php
  #   container_name: wordpress1
  #   restart: always
  #   volumes:
  #     - ${WORDPRESS_DATA_DIR}:/var/www/html:rw
  #     - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini  
  #     - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
  #   environment:
  #     - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME:-wordpress}
  #     - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX:-wp_}
  #     - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST:-mysql}
  #     - WORDPRESS_DB_USER=${WORDPRESS_DB_USER:-root}
  #     - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD:-password}
  #   labels:
  #     - traefik.enable=false
  #   depends_on:
  #     -  mariadb


  # wordpress2:
  #   build: ./php
  #   container_name: wordpress2
  #   restart: always
  #   volumes:
  #     - ${WORDPRESS_DATA_DIR}:/var/www/html:rw
  #     - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini  
  #     - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
  #   environment:
  #     - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME:-wordpress}
  #     - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX:-wp_}
  #     - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST:-mysql}
  #     - WORDPRESS_DB_USER=${WORDPRESS_DB_USER:-root}
  #     - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD:-password}
  #   labels:
  #     - traefik.enable=false
  #   depends_on:
  #     -  mariadb


  # wordpress3:
  #   build: ./php
  #   container_name: wordpress3
  #   restart: always
  #   volumes:
  #     - ${WORDPRESS_DATA_DIR}:/var/www/html:rw
  #     - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini  
  #     - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
  #   environment:
  #     - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME:-wordpress}
  #     - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX:-wp_}
  #     - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST:-mysql}
  #     - WORDPRESS_DB_USER=${WORDPRESS_DB_USER:-root}
  #     - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD:-password}
  #   labels:
  #     - traefik.enable=false
  #   depends_on:
  #     -  mariadb      
 
  # varnish:
  #   image: emgag/varnish:6.0.1
  #   container_name: varnish
  #   restart: always
  #   # environment:
  #   #   - DAEMON_OPTS="$DAEMON_OPTS -F '%{Host}i %h %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-agent}i\"'"
  #   volumes:
  #     - ./varnish:/etc/varnish/
  #   depends_on:
  #     - nginx

  #   labels:
  #     - "traefik.backend=varnish"
  #     - "traefik.port=80"
  #     - "traefik.frontend.rule=Host:${PROJECT_BASE_URL}"
  #     - "traefik.enable=true"

  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    container_name: nginx
    restart: always
    command: [nginx-debug, '-g', 'daemon off;']
    volumes:
      - ${NGINX_CONF_DIR}/conf.d:/etc/nginx/conf.d
      - ${NGINX_CONF_DIR}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_LOG_DIR}:/var/log/nginx
      - ${WORDPRESS_DATA_DIR}:/var/www/html
      # - ${SSL_CERTS_DIR:-./certs}:/etc/letsencrypt
      #- ${SSL_CERTS_DATA_DIR:-./certs-data}:/data/letsencrypt


    labels:
      - "traefik.backend=nginx"
      - "traefik.port=81"
      - traefik.enable=true
      - "traefik.frontend.rule=Host:${PROJECT_BASE_URL}"
  php_my:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    environment:
      - "PMA_HOST=mariadb"
    labels:
      - "traefik.backend=php_my"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:pma.${PROJECT_BASE_URL}"
      - "traefik.enable=true"
      
  traefik:
    image: traefik
    container_name: traefik
    environment:
      CF_API_EMAIL: "victorcastro89@hotmail.com"
      CF_API_KEY: "f313ecb781244e68c6ebb2adb43d96dbbc693"
    command: 
      - --docker 
      - --logLevel=INFO
      - "--api"
      - "--entrypoints=Name:http Address::80 # Redirect.EntryPoint:https" 
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--acme"
      - "--acme.storage=./acme.json"
      - "--acme.entryPoint=https"
      - "--acme.dnsChallenge.provider=cloudflare"
#      - "--acme.onHostRule=true"
      - "--acme.domains=*.${PROJECT_BASE_URL}"
      - "--acme.email=victorcastro89@hotmail.com"
#      - "--acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--docker.watch"    
      - "--docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080" # Dashboard
      - "443:443"
 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json
    labels:
      - "traefik.backend=traefik"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.${PROJECT_BASE_URL}"
      - "traefik.enable=true"
      - "traefik.frontend.auth.basic.users= victor:$$apr1$$nGdEqwrj$$zMXoC4r6ARkIDDBfNtydw."
    
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $WORDPRESS_DB_ROOT_PASSWORD
      MYSQL_DATABASE: $WORDPRESS_DB_NAME
      MYSQL_USER: $WORDPRESS_DB_USER
      MYSQL_PASSWORD: $WORDPRESS_DB_PASSWORD
      MYSQL_INNODB_BUFFER_POOL_SIZE: 20M
      MYSQL_OPTIMIZER_SEARCH_DEPTH: 8
      MYSQL_MAX_CONNECTIONS: 500
    volumes:
      - ./backup_db:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ~/mariadb_data1:/var/lib/mysql # I want to manage volumes manually.

    labels:
      - "traefik.enable=false"


  blackfire:
    image: blackfire/blackfire
    container_name: "blackfire"
    environment:
      BLACKFIRE_SERVER_ID: 931244a8-f04f-4a63-b80d-a69b13e8e861
      BLACKFIRE_SERVER_TOKEN: 80653c753c24d0af516171be3c8a6fa002fa06e52d962f08e48e85d86ca1f065
